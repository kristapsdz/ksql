.\"	$Id$
.\"
.\" Copyright (c) 2016 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KSQL_BIND_DOUBLE 3
.Os
.Sh NAME
.Nm ksql_bind_blob ,
.Nm ksql_bind_double ,
.Nm ksql_bind_int ,
.Nm ksql_bind_str ,
.Nm ksql_bind_zblob
.Nd bind values to a prepared statement
.Sh LIBRARY
.Lb ksql
.Sh SYNOPSIS
.In stdint.h
.In ksql.h
.Ft "enum ksqlc"
.Fo ksql_bind_blob
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fa "const void *val"
.Fa "size_t valsz"
.Fc
.Ft "enum ksqlc"
.Fo ksql_bind_double
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fa "double val"
.Fc
.Ft "enum ksqlc"
.Fo ksql_bind_int
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fa "int64_t val"
.Fc
.Ft "enum ksqlc"
.Fo ksql_bind_str
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fa "const char *val"
.Fc
.Ft "enum ksqlc"
.Fo ksql_bind_zblob
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fa "size_t valsz"
.Fc
.Sh DESCRIPTION
The
.Nm ksql_bind_blob ,
.Nm ksql_bind_bytes ,
.Nm ksql_bind_double ,
.Nm ksql_bind_int ,
.Nm ksql_bind_str ,
and
.Nm ksql_bind_zblob
functions bind data to a statement prepared with
.Xr ksql_stmt_alloc 3 .
They all accept the relevant column to bind, which starts at zero.
.Pp
.Em Note :
in SQLite, binding occurs starting at column one.
In these functions, for consistency with
.Xr ksql_stmt_double 3
and friends, it starts at zero.
.Pp
In
.Nm ksql_bind_blob
and
.Nm ksql_bind_str ,
the contents not copied, so the memory used must be valid until
.Xr ksql_stmt_step 3 .
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh IMPLEMENTATION NOTES
.\" Not used in OpenBSD.
.Sh RETURN VALUES
These functions return
.Dv KSQL_DB
if the underlying bind operation fails or
.Dv KSQL_OK
on success.
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr sqlite3_bind_blob 3
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
