.\"	$Id$
.\"
.\" Copyright (c) 2016 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate$
.Dt KSQL_STMT_DOUBLE 3
.Os
.Sh NAME
.Nm ksql_stmt_blob ,
.Nm ksql_stmt_bytes ,
.Nm ksql_stmt_double ,
.Nm ksql_stmt_int ,
.Nm ksql_stmt_isnull ,
.Nm ksql_stmt_str
.Nd get the result columns of a statement
.Sh LIBRARY
.Lb ksql
.Sh SYNOPSIS
.In stdint.h
.In ksql.h
.Ft "const void *"
.Fo ksql_stmt_blob
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fc
.Ft size_t
.Fo ksql_stmt_bytes
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fc
.Ft double
.Fo ksql_stmt_double
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fc
.Ft int64_t
.Fo ksql_stmt_int
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fc
.Ft int
.Fo ksql_stmt_isnull
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fc
.Ft "const char *"
.Fo ksql_stmt_str
.Fa "struct ksqlstmt *stmt"
.Fa "size_t col"
.Fc
.Sh DESCRIPTION
The
.Nm ksql_stmt_blob ,
.Nm ksql_stmt_bytes ,
.Nm ksql_stmt_double ,
.Nm ksql_stmt_int ,
and
.Nm ksql_stmt_str
functions return data from a row returned after
.Xr ksql_stmt_step 3 .
They all accept the relevant column to query, which starts at zero.
The results are not defined for a statement without a waiting row or for
columns beyond the prepared statement.
.Pp
The
.Nm ksql_stmt_blob
and
.Nm ksql_stmt_bytes
functions are usually used to return binary data.
The
.Nm ksql_stmt_str
and
.Nm ksql_stmt_blob
return memory
.Dq owned
by the database, so it should be copied before modification.
These pointers are only valid until a subsequent
.Xr ksql_stmt_step 3 ,
.Xr ksql_stmt_reset 3 ,
or
.Xr ksql_stmt_free 3 .
.Pp
The
.Nm ksql_stmt_isnull
function checks if the result column is empty, i.e.,
.Dv SQLITE_NULL .
.\" .Sh CONTEXT
.\" For section 9 functions only.
.\" .Sh IMPLEMENTATION NOTES
.\" Not used in OpenBSD.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.\" .Sh FILES
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.Sh SEE ALSO
.Xr sqlite3_column_blob 3
.\" .Xr foobar 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.\" .Sh AUTHORS
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
